{"ast":null,"code":"var _jsxFileName = \"E:\\\\Files\\\\zithara_task\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\n\n// import {COLUMNS} from './components/columns';\nimport axios from 'axios';\nimport DataTable from 'react-data-table-component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // const columns = useMemo(() => COLUMNS, []);\n  const customStyles = {\n    headRow: {\n      style: {\n        backgroundColor: 'blue',\n        color: 'white'\n      }\n    }\n  };\n  const column = [{\n    name: \"Sno\",\n    selector: row => row.sno\n  }, {\n    name: \"Name\",\n    selector: row => row.cust_name\n  }, {\n    name: \"Age\",\n    selector: row => row.age\n  }, {\n    name: \"Phone_No\",\n    selector: row => row.phone\n  }, {\n    name: \"Location\",\n    selector: row => row.locations\n  }, {\n    name: \"Date\",\n    selector: row => row.dates.substring(0, 10),\n    sortable: true\n  }, {\n    name: \"Time\",\n    selector: row => row.times,\n    sortable: true\n  }];\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    fetchCustomers();\n  }, []);\n  console.log(data);\n  const fetchCustomers = async () => {\n    try {\n      axios.get('http://localhost:4000/api/customer_details').then(response => setData(response.data)).catch(err => console.log(err));\n    } catch (error) {\n      console.error('Error fetching customers:', error);\n    }\n  };\n  const changeHandler = e => {\n    const newdata = data.filter(row => row.row.cust_name.toLowerCase().includes(e.target.value.toLowerCase()));\n    setData;\n  };\n  console.log(row => row.dates);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"50px 10%\",\n      backgroundColor: \"gray\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search...\",\n        onChange: changeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      columns: column,\n      data: data,\n      pagination: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","axios","DataTable","jsxDEV","_jsxDEV","App","_s","customStyles","headRow","style","backgroundColor","color","column","name","selector","row","sno","cust_name","age","phone","locations","dates","substring","sortable","times","data","setData","fetchCustomers","console","log","get","then","response","catch","err","error","changeHandler","e","newdata","filter","toLowerCase","includes","target","value","padding","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","columns","pagination","_c","$RefreshReg$"],"sources":["E:/Files/zithara_task/frontend/src/App.js"],"sourcesContent":["import React , { useState, useEffect, useMemo } from 'react'\n\n// import {COLUMNS} from './components/columns';\nimport axios from 'axios';\nimport DataTable from 'react-data-table-component';\n\n\nfunction App() {\n    // const columns = useMemo(() => COLUMNS, []);\n    const customStyles = {\n        headRow : {\n            style :{\n                backgroundColor : 'blue',\n                color : 'white'\n            }\n        }\n    }\n    const column = [\n        {\n            name : \"Sno\",\n            selector : row => row.sno\n        },\n        {\n            name : \"Name\",\n            selector : row => row.cust_name\n        },\n        {\n            name : \"Age\",\n            selector : row => row.age\n        },\n        {\n            name : \"Phone_No\",\n            selector : row => row.phone\n        },\n        {\n            name : \"Location\",\n            selector : row => row.locations\n        },\n        {\n            name : \"Date\",\n            selector : row => (row.dates).substring(0,10),\n            sortable: true\n        },\n        {\n            name : \"Time\",\n            selector : row => row.times,\n            sortable: true\n        },\n    ]\n    const [data, setData] = useState([]);\n    useEffect(() => {\n        fetchCustomers();\n        \n    }, []);\n    console.log(data);\n    const fetchCustomers = async () => {\n        try {\n            axios.get('http://localhost:4000/api/customer_details')\n            .then(response => setData(response.data))\n            .catch(err => console.log(err));\n            \n        } catch (error) {\n            console.error('Error fetching customers:', error);\n        }\n    };\n    const changeHandler = (e) =>{\n        const newdata = data.filter(row => row.row.cust_name.toLowerCase().includes(e.target.value.toLowerCase()))\n        setData\n    }\n  console.log(row => row.dates)\n  return (\n    <div style={{padding : \"50px 10%\",backgroundColor : \"gray\"}}>\n        <div>\n            <input type='text' placeholder='Search...' onChange={changeHandler}/>\n            \n        </div>\n        <DataTable\n            columns = {column}\n            data = {data}\n            pagination\n        >\n        </DataTable>\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}