{"ast":null,"code":"var _jsxFileName = \"E:\\\\Files\\\\zithara_task\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n\n// import {COLUMNS} from './components/columns';\nimport axios from 'axios';\nimport DataTable from 'react-data-table-component';\nimport './styles.css';\nimport { CustomStyle } from './CustomStyle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  const [filterData, setFilterData] = useState([]);\n  const [filterText, setFilterText] = useState('');\n  const [showFilteredData, setShowFilteredData] = useState(false);\n  const column = [{\n    name: \"Sno\",\n    selector: row => row.sno\n  }, {\n    name: \"Name\",\n    selector: row => row.cust_name\n  }, {\n    name: \"Age\",\n    selector: row => row.age\n  }, {\n    name: \"Phone_No\",\n    selector: row => row.phone\n  }, {\n    name: \"Location\",\n    selector: row => row.locations\n  }, {\n    name: \"Date\",\n    selector: row => row.dates.substring(0, 10),\n    sortable: true\n  }, {\n    name: \"Time\",\n    selector: row => row.times,\n    sortable: true\n  }];\n  useEffect(() => {\n    fetchCustomers();\n  }, []);\n  console.log(data);\n  const fetchCustomers = async () => {\n    try {\n      axios.get('http://localhost:4000/api/customer_details').then(response => {\n        setData(response.data);\n        setFilterData(response.data);\n      }).catch(err => console.log(err));\n    } catch (error) {\n      console.error('Error fetching customers:', error);\n    }\n  };\n  // const changeHandler = (e) =>{\n  //     const newdata = filterData.filter(row => row.cust_name.toLowerCase().includes(e.target.value.toLowerCase()));\n  //     setData(newdata);\n  // }\n  const changeHandler = e => {\n    const searchText = e.target.value.toLowerCase();\n    const filteredData = data.filter(row => row.cust_name.toLowerCase().includes(searchText));\n    setFilterText(searchText);\n    setShowFilteredData(true);\n    setFilterData(filteredData);\n  };\n  // const sortByDate = () => {\n  //     const sortedData = [...filterData].sort((a, b) => new Date(a.dates) - new Date(b.dates));\n  //     setFilterData(sortedData);\n  // };\n\n  // const sortByTime = () => {\n  //     const sortedData = [...filterData].sort((a, b) => new Date('1970/01/01 ' + a.times) - new Date('1970/01/01 ' + b.times));\n  //     setFilterData(sortedData);\n  // };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"50px 10%\",\n      backgroundColor: \"gray\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heading\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Customer-Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search...\",\n        onChange: changeHandler,\n        className: \"searchBox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sortByDate,\n        children: \"Sort by Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sortByTime,\n        children: \"Sort by Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      columns: column,\n      data: data,\n      pagination: true,\n      paginationPerPage: 20,\n      customStyles: CustomStyle\n      // customStyles={require('./styles.css')}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Gxt5D1pGlp5CBuIIOeXkTEGAB/0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","DataTable","CustomStyle","jsxDEV","_jsxDEV","App","_s","data","setData","filterData","setFilterData","filterText","setFilterText","showFilteredData","setShowFilteredData","column","name","selector","row","sno","cust_name","age","phone","locations","dates","substring","sortable","times","fetchCustomers","console","log","get","then","response","catch","err","error","changeHandler","e","searchText","target","value","toLowerCase","filteredData","filter","includes","style","padding","backgroundColor","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","sortByDate","sortByTime","columns","pagination","paginationPerPage","customStyles","_c","$RefreshReg$"],"sources":["E:/Files/zithara_task/frontend/src/App.js"],"sourcesContent":["import React , { useState, useEffect } from 'react'\n\n// import {COLUMNS} from './components/columns';\nimport axios from 'axios';\nimport DataTable from 'react-data-table-component';\nimport './styles.css';\nimport { CustomStyle } from './CustomStyle';\n\n\nfunction App() {\n    const [data, setData] = useState([]);\n    const [filterData, setFilterData] = useState([]);\n    const [filterText, setFilterText] = useState('');\n    const [showFilteredData, setShowFilteredData] = useState(false);\n    \n    const column = [\n        {\n            name : \"Sno\",\n            selector : row => row.sno\n        },\n        {\n            name : \"Name\",\n            selector : row => row.cust_name\n        },\n        {\n            name : \"Age\",\n            selector : row => row.age\n        },\n        {\n            name : \"Phone_No\",\n            selector : row => row.phone\n        },\n        {\n            name : \"Location\",\n            selector : row => row.locations\n        },\n        {\n            name : \"Date\",\n            selector : row => (row.dates).substring(0,10),\n            sortable: true\n        },\n        {\n            name : \"Time\",\n            selector : row => row.times,\n            sortable: true\n        },\n    ]\n    \n \n    useEffect(() => {\n        fetchCustomers();\n        \n    }, []);\n    console.log(data);\n    const fetchCustomers = async () => {\n        try {\n            axios.get('http://localhost:4000/api/customer_details')\n            .then(response => {\n                setData(response.data);\n                setFilterData(response.data);\n            })\n            .catch(err => console.log(err));\n            \n        } catch (error) {\n            console.error('Error fetching customers:', error);\n        }\n    };\n    // const changeHandler = (e) =>{\n    //     const newdata = filterData.filter(row => row.cust_name.toLowerCase().includes(e.target.value.toLowerCase()));\n    //     setData(newdata);\n    // }\n    const changeHandler = (e) => {\n        const searchText = e.target.value.toLowerCase();\n        const filteredData = data.filter(row => row.cust_name.toLowerCase().includes(searchText));\n        setFilterText(searchText);\n        setShowFilteredData(true);\n        setFilterData(filteredData);\n    };\n    // const sortByDate = () => {\n    //     const sortedData = [...filterData].sort((a, b) => new Date(a.dates) - new Date(b.dates));\n    //     setFilterData(sortedData);\n    // };\n\n    // const sortByTime = () => {\n    //     const sortedData = [...filterData].sort((a, b) => new Date('1970/01/01 ' + a.times) - new Date('1970/01/01 ' + b.times));\n    //     setFilterData(sortedData);\n    // };\n  return (\n    \n    <div style={{padding : \"50px 10%\",backgroundColor : \"gray\"}}>\n        <div className='heading'> <h2>Customer-Details</h2></div>\n        <div className='searchContainer'>\n            <input type='text' placeholder='Search...' onChange={changeHandler} className='searchBox'/>\n            <button onClick={sortByDate}>Sort by Date</button>\n            <button onClick={sortByTime}>Sort by Time</button>\n        </div>\n        <DataTable\n            columns = {column}\n            data = {data}\n            pagination\n            paginationPerPage={20}\n            customStyles={CustomStyle}\n            // customStyles={require('./styles.css')}\n        >\n        </DataTable>\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}